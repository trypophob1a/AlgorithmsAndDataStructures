name: CI

on:
  push:
    branches:
      - '*'
      - '*/**'

env:
  GO111MODULE: "on"
  MIN_PERCENT_FOR_COVERAGE: 80

jobs:
  go_get:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: |
          if [[ ${GITHUB_REF#refs/heads/} == 'main' || ${GITHUB_REF#refs/heads/} == 'master' ]]; then
            echo "BRANCH=${PWD}" >> $GITHUB_ENV
          else
            echo "BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | perl -pe 's/--\d+//g')" >> $GITHUB_ENV
          fi
      - name: Check out code
        uses: actions/checkout@v3

      - name: Linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.46.2
          working-directory: ${{ env.BRANCH }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: |
          if [[ ${GITHUB_REF#refs/heads/} == 'main' || ${GITHUB_REF#refs/heads/} == 'master' ]]; then
            echo "BRANCH=${PWD}" >> $GITHUB_ENV
          else
            echo "BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | perl -pe 's/--\d+//g')" >> $GITHUB_ENV
          fi
      - name: Install Go
        if: success()
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19

      - name: Checkout code
        uses: actions/checkout@v3

      - name: unit test
        run: |
         go test -race -covermode atomic -coverprofile=coverage.out ./... && go tool cover -func=coverage.out > output.txt
        working-directory: ${{ env.BRANCH }}

      - name: Is sufficient coverage
        run: |
          cd "${GITHUB_WORKSPACE}/.github/workflows"
          if [[ ${GITHUB_REF#refs/heads/} == 'main' || ${GITHUB_REF#refs/heads/} == 'master' ]]; then
            python isc.py ${{ env.BRANCH }}/output.txt $MIN_PERCENT_FOR_COVERAGE
          else
            python isc.py "${GITHUB_WORKSPACE}/"${{ env.BRANCH }}/output.txt $MIN_PERCENT_FOR_COVERAGE
          fi
        working-directory: ${{ env.BRANCH }}

      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: ${{ env.BRANCH }}/coverage.out


